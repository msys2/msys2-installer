name: 'build'

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1,4'

jobs:
  build-installer:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: setup-msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: p7zip tar mingw-w64-x86_64-qt-installer-framework

      - name: Switch to the main mirror
        shell: msys2 {0}
        run: |
          sed -e "s|Include = /etc/pacman.d/mirrorlist.mingw32|Server = http://repo.msys2.org/mingw/i686/|g" -i /etc/pacman.conf
          sed -e "s|Include = /etc/pacman.d/mirrorlist.mingw64|Server = http://repo.msys2.org/mingw/x86_64/|g" -i /etc/pacman.conf
          sed -e "s|Include = /etc/pacman.d/mirrorlist.msys|Server = http://repo.msys2.org/msys/\$arch/|g" -i /etc/pacman.conf
          pacman-conf.exe

      - name: Update using the main mirror & Check install
        run: |
          msys2 -c 'pacman --noconfirm -Suuy'
          msys2 -c 'pacman --noconfirm -Suu'
          msys2 -c 'pacman -Qkq'

      - name: Build Installer
        shell: msys2 {0}
        run: |
          bash make-msys2-installer
          sha256sum.exe msys2-*
          sha256sum.exe msys2-* > msys2-checksums.txt

      - name: Create 'latest' Variants
        run: |
          cp msys2-base-x86_64-[0-9]*.sfx.exe msys2-base-x86_64-latest.sfx.exe
          cp msys2-x86_64-[0-9]*.exe msys2-x86_64-latest.exe
          cp msys2-*.tar.xz msys2-base-x86_64-latest.tar.xz

      - name: Upload Results
        uses: actions/upload-artifact@v2
        with:
          name: installer
          path: msys2-*

  test-installer:
    name: windows-${{ matrix.image }}
    runs-on: windows-${{ matrix.image }}
    needs: build-installer
    strategy:
      fail-fast: false
      matrix:
        image: [2016, 2019, 2022]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: installer

      - name: Install
        run: |
          ./msys2-x86_64-latest.exe in --confirm-command --accept-messages --root C:/msys2-install-test

      - name: Test
        run: |
          C:\msys2-install-test\usr\bin\bash.exe -lc "pacman --version"
          C:\msys2-install-test\usr\bin\bash.exe -lc "pacman -Qkv"
          C:\msys2-install-test\usr\bin\bash.exe -lc "pacman -Syy"

      - name: Uninstall
        run: |
          C:\msys2-install-test\uninstall.exe pr --confirm-command

  test-docker-sfx:
    name: ltsc-${{ matrix.image }}
    runs-on: windows-${{ matrix.image }}
    needs: build-installer
    strategy:
      fail-fast: false
      matrix:
        image: [2016, 2019, 2022]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: installer

      - name: Build image
        run: |
          docker build -t msys2-base -f ./.ci/Dockerfile.${{ matrix.image }} .

      - name: Test
        run: |
          docker run msys2-base C:\msys64\usr\bin\bash.exe -lc "pacman --version"
          docker run msys2-base C:\msys64\usr\bin\bash.exe -lc "pacman -Qkv"
          docker run msys2-base C:\msys64\usr\bin\bash.exe -lc "pacman -Syy"

  upload-nightly:
    permissions:
      contents: write
    needs:
      - test-docker-sfx
      - test-installer
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: installer

      - uses: eine/tip@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly-x86_64
          rm: true
          files: msys2-*
